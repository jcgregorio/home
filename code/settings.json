{
  "workbench.editor.enablePreview": false,
  "workbench.editor.enablePreviewFromQuickOpen": false,
  "editor.find.autoFindInSelection": "never",
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true
  },
  "eslint.format.enable": true,
  "eslint.validate": ["typescript", "typescriptreact"],

  "editor.guides.bracketPairs": true,
  "git.enableSmartCommit": true,
  "editor.wordWrap": "on",
  "editor.wordWrapColumn": 80,
  "editor.wrappingIndent": "same",
  "editor.formatOnSave": true,
  "rewrap.autoWrap.enabled": false,

  "eslint.alwaysShowStatus": true,
  "eslint.lintTask.enable": true,
  "eslint.codeAction.showDocumentation": {
    "enable": true
  },

  "explorer.confirmDragAndDrop": false,

  "prettier.singleQuote": true,
  "terminal.integrated.allowChords": false,
  "[python]": {
    "editor.defaultFormatter": "ms-python.python"
  },
  "explorer.confirmDelete": false,
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "prettier.jsxSingleQuote": true,
  "typescript.format.semicolons": "insert",

  // Go stuff
  "go.autocompleteUnimportedPackages": true,
  "go.testFlags": ["-count=1"],
  "go.useLanguageServer": true,
  "go.languageServerExperimentalFeatures": {
    "diagnostics": true
  },
  "go.formatTool": "goimports",
  "go.formatFlags": ["-s"],
  "go.toolsEnvVars": {
    "GOPROXY": "direct"
  },
  "go.testTimeout": "20s",
  "go.delveConfig": {},
  "gopls": {
    "build.allowImplicitNetworkAccess": true,

    "verboseOutput": true,

    // Add parameter placeholders when completing a function.
    "usePlaceholders": true,

    "ui.diagnostic.staticcheck": true,

    "build.directoryFilters": [
      "-_bazel_bin",
      "-_bazel_buildbot",
      "-_bazel_out",
      "-_bazel_testlogs"
    ]
  },

  "[go]": {
    "editor.insertSpaces": false,
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": true
    },
    "editor.defaultFormatter": "golang.go"
  },
  "[go.mod]": {
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": true
    }
  },
  "typescript.preferences.quoteStyle": "single",
  "typescript.suggest.completeFunctionCalls": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": true,
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "editor.fontLigatures": false,
  "editor.find.seedSearchStringFromSelection": true,
  "files.exclude": {
    "_bazel_*": true,
    "**/.DS_Store": true,
    "**/.git": true,
    "**/.hg": true,
    "**/.svn": true,
    "**/CVS": true,
    "bazel-infra/**": true
  },
  "spellchecker.documentTypes": ["markdown", "latex", "plaintext"],
  "bazel.executable": "/home/jcgregorio/projects/golib/bin/bazelisk",
  "bazel.buildifierExecutable": "/home/jcgregorio/projects/golib/bin/buildifier",
  "bazel.buildifierFixOnFormat": true,

  "prettier.proseWrap": "always",
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "yaml.customTags": ["!encrypted/pkcs1-oaep scalar", "!vault scalar"],
  "ansible.validate.executablePath": "/usr/bin/ansible-lint",
  "spellchecker.ignoreWordsList": ["Ansible", "Skolo"],
  "go.lintTool": "golint",
  "security.workspace.trust.untrustedFiles": "open",
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "go.toolsManagement.autoUpdate": true,
  "[sql]": {
    "editor.defaultFormatter": "bradymholt.pgformatter"
  },
  "[cpp]": {
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "yaml.schemas": {
    "kubernetes": ["/*"]
  },
  "window.zoomLevel": -1,
  "[markdown]": {
    "editor.defaultFormatter": "yzhang.markdown-all-in-one"
  },
  "terminal.integrated.enableMultiLinePasteWarning": false,
  "files.saveConflictResolution": "overwriteFileOnDisk",
  "[typescript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "bazel.enableCodeLens": true,
  "bazel.queriesShareServer": false,
  "pgFormatter.commaBreak": true,
  "pgFormatter.tabs": true
}
